package com.chagawa.messageRoom.controller;


import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import com.chagawa.message.service.MessageLogServiceImpl;
import com.chagawa.message.vo.MessageVO;
import com.chagawa.messageRoom.vo.MessageRoomVO;
import com.chagawa.main.Execute;
import com.chagawa.main.ServiceInterface;
import com.chagawa.member.vo.LoginVO;
import com.chagawa.member.vo.MemberVO;

public class MessageRoomController {

	// private 변수로 MessageService
	private ServiceInterface messageRoomListService;
	private ServiceInterface messageRoomWriteService;
	private ServiceInterface messageRoomDeleteService;
	private ServiceInterface messageRoomLeaveService;
	private ServiceInterface messageLogService;

	// setter를 만들어서 생성된 service를 받는다.
	public void setMessageRoomListService(ServiceInterface messageRoomListService) {
		this.messageRoomListService = messageRoomListService;
	}
	public void setMessageRoomWriteService(ServiceInterface messageRoomWriteService) {
		this.messageRoomWriteService = messageRoomWriteService;
	}
	public void setMessageRoomDeleteService(ServiceInterface messageRoomDeleteService) {
		this.messageRoomDeleteService = messageRoomDeleteService;
	}
	public void setMessageRoomLeaveService(ServiceInterface messageRoomLeaveService) {
		this.messageRoomLeaveService = messageRoomLeaveService;
	}
	public void setMessageLogService(ServiceInterface messageLogService) {
		this.messageLogService = messageLogService;
	}
	
	// 실행 메서드 -> 리턴 String 데이터를 jsp 또는 url 정보가 된다.
	public String execute(HttpServletRequest request) throws Exception{
		System.out.println("MessageRoomController.execute().request : " + request);
		// 어떤 요청
		String uri = request.getRequestURI();
		String jsp = null;
		LoginVO loginVO = (LoginVO) request.getSession().getAttribute("login");
		// 처리 
		switch (uri) {
		case "/messageroom/list.do":
			request.setAttribute("list", Execute.run(messageRoomListService, loginVO.getId()));
			jsp = "messageRoom/list";
			break;
		
		
			
		case "/messageroom/write.do":
			String id = request.getParameter("par1");
			MessageVO vo = (MessageVO) Execute.run(messageRoomListService, id);
			MessageVO vo1 = (MessageVO) Execute.run(messageRoomListService, loginVO.getId());
					
			if (vo.getRoomno() == vo1.getRoomno() ) {
			if(request.getMethod().equals("GET")) {
				jsp = "messageroom/write";
			} else {
				String par1 = request.getParameter("id");
				request.setAttribute
				("messageroomwrite", Execute.run(messageRoomWriteService, 
						new Object[] { par1,loginVO.getId() }));
				jsp = "redirect:message/messagelog.do?roomNo=" + request.getParameter("roomNo")
				+"&par1="+ request.getParameter("par1");
			}
			}else {
				jsp = "redirect:message/messagelog.do?roomNo="  + vo.getRoomno();
			}
			break;
			
			
		case "/messageroom/leave.do":
			
			String updateNoStr = request.getParameter("roomNo");
			long roomNo = Long.parseLong(updateNoStr);
			
			
			request.setAttribute("messageroomleave",Execute.run(messageRoomLeaveService, new Object[] { roomNo,loginVO.getId() }));
			jsp = "redirect:list.do"; 
			
			break;
			
		default:
			jsp = "redirect:/error/404.do";
			request.getSession().setAttribute("uri", uri);		}
		return jsp;
	}
	
}
